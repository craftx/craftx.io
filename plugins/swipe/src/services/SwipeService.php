<?php
namespace selvinortiz\swipe\services;

use Craft;
use craft\base\Component;
use craft\helpers\Json;

use Stripe\Charge;
use Stripe\Stripe;
use Stripe\Customer;

use function selvinortiz\swipe\swipe;
use Stripe\Subscription;

class SwipeService extends Component
{
    private $_decodedParams = null;

    public function init()
    {
        Stripe::setApiKey($this->settings()->stripeSecretKey);
    }

    /**
     * @param string $email  Email used at checkout
     * @param string $source Most likely the token generated by Stripe Checkout
     *
     * @return Customer
     */
    public function createCustomer(string $email, string $source) {
        return Customer::create(compact('email', 'source'));
    }

    public function createCharge(int $customer, int $amount, string $currency = 'usd'): Charge {
        return Charge::create(compact('customer', 'amount', 'currency'));
    }

    public function createSubscription(int $customer, string $plan): Subscription {
        return Subscription::create(compact('customer', 'plan'));
    }

    public function settings()
    {
        return swipe()->getSettings();
    }

    public function getDecodedParams($default = [])
    {
        if (null === $this->_decodedParams) {
            $this->_decodedParams = Json::decode(Craft::$app->request->getRawBody());
        }

        return $this->_decodedParams ?? $default;
    }

    public function getDecodedParam(string $name, $default = null)
    {
        if (null === $this->_decodedParams) {
            $this->_decodedParams = Json::decode(Craft::$app->request->getRawBody());
        }

        return $this->_decodedParams[$name] ?? $default;
    }
}
